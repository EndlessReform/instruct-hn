openapi: 3.0.1
info:
  title: Hacker News API for ChatGPT
  version: '0.1'
  description: Query, analyze, and summarize insights from the Hacker News community.
  contact:
    url: https://hn.kix.in/
    email: anant@kix.in
  license:
    name: MIT License
    url: https://opensource.org/license/mit/
paths:
  "/item":
    get:
      summary: Retrieve a story, poll, or comment; along with all of their children.
      operationId: get_item
      parameters:
      - required: false
        schema:
          type: integer
          default: 1
        name: id
        in: query
        description: ID of the item you want to retrieve.
      - required: false
        schema:
          type: string
          enum:
            - full
            - none
            - short
          default: full
        name: verbosity
        in: query
        description: Set this to control the length of the output. Value of 'full' will retrieve all kid comments (default), 'short' will return the most relevant kid comments, and 'none' will return only the item metadata.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ItemResponse"
  "/items":
    get:
      summary: Search for items matching a variety of criteria. Items are sorted by their relevance to the query by default.
      operationId: find_items
      parameters:
      - required: false
        schema:
          type: string
          enum:
            - story
            - comment
            - poll
            - job
          default: story
        name: item_type
        in: query
        description: Restrict results to this type. Can be 'story' (default), 'comment', 'poll', or 'job'.
      - required: false
        schema:
          type: string
        name: query
        in: query
        description: Perform a semantic search to find all items matching the meaning of this query string.
      - required: false
        schema:
          type: boolean
          default: false
        name: exclude_text
        in: query
        description: Exclude text and selected child comments if set to true, default is false.
      - required: false
        schema:
          type: string
        name: by
        in: query
        description: Find items created or submitted by this user. These IDs can be input into the get_item endpoint to obtain more information about them.
      - required: false
        schema:
          type: string
        name: before_time
        in: query
        description: Find items submitted at or before this time. You may specify the time in natural language.
      - required: false
        schema:
          type: string
        name: after_time
        in: query
        description: Find items submitted at or after this time. You may specify the time in natural language.
      - required: false
        schema:
          type: integer
        name: min_score
        in: query
        description: Find items with a score equal or higher than this number.
      - required: false
        schema:
          type: integer
        name: max_score
        in: query
        description: Find items with a score equal or lower than this number.
      - required: false
        schema:
          type: integer
        name: min_comments
        in: query
        description: Find items with a number of comments (descendants) equal or higher than this number.
      - required: false
        schema:
          type: integer
        name: max_comments
        in: query
        description: Find items with a number of comments (descendants) or lower than this number.
      - required: false
        schema:
          type: string
          enum:
            - relevance
            - score
            - time
            - descendants
          default: relevance
        name: sort_by
        in: query
        description: Sort results by query relevance (default), score (upvotes), descendants (number of comments), or time of submission.
      - required: false
        schema:
          type: string
          enum:
            - asc
            - desc
          default: desc
        name: sort_order
        in: query
        description: Sort results in descending (default) or ascending order of the sort_by parameter.
      - required: false
        schema:
          type: integer
          default: 0
        name: skip
        in: query
        description: Offset the results returned, use to page through multiple results.
      - required: false
        schema:
          type: integer
          default: 10
        name: limit
        in: query
        description: Limit the number of results returned (default 10, max 50).
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ItemResponse"
  "/user":
    get:
      summary: Retrieve a user along with all their submissions (story, comment, or poll IDs).
      operationId: get_user
      parameters:
      - required: false
        schema:
          type: string
          default: pg
        name: id
        in: query
        description: ID of the user you want to retrieve.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserResponse"
  "/users":
    get:
      summary: Find users matching a variety of criteria. Users are sorted by their karma (upvotes) by default.
      operationId: find_users
      parameters:
      - required: false
        schema:
          type: string
        name: before_created
        in: query
        description: Find users created at or before this UNIX time. You may specify the time in natural language.
      - required: false
        schema:
          type: string
        name: after_created
        in: query
        description: Find users created at or after this UNIX time. You may specify the time in natural language.
      - required: false
        schema:
          type: integer
        name: min_karma
        in: query
        description: Find users with karma at or above this number.
      - required: false
        schema:
          type: integer
        name: max_karma
        in: query
        description: Find users with karma at or below this number.
      - required: false
        schema:
          type: string
          enum:
            - created
            - karma
          default: karma
        name: sort_by
        in: query
        description: Sort results by karma (default), or created (account creation time).
      - required: false
        schema:
          type: string
          enum:
            - asc
            - desc
          default: desc
        name: sort_order
        in: query
      - required: false
        schema:
          type: integer
          default: 0
        name: skip
        in: query
      - required: false
        schema:
          type: integer
          default: 10
        name: limit
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserResponse"
components:
  schemas:
    ItemResponse:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        by:
          type: string
        time:
          type: integer
        text:
          type: string
        url:
          type: string
        score:
          type: integer
        title:
          type: string
        descendants:
          type: integer
        parent:
          type: integer
        kids:
          type: array
          items:
            type: object
        parts:
          type: array
          items:
            type: object
        summary:
          type: array
          items:
            type: string
        hn_url:
          type: string
    UserResponse:
      required:
      - id
      - created
      - karma
      type: object
      properties:
        id:
          type: string
        created:
          type: integer
        karma:
          type: integer
        about:
          type: string
        submitted:
          type: array
          items:
            type: integer
        hn_url:
          type: string